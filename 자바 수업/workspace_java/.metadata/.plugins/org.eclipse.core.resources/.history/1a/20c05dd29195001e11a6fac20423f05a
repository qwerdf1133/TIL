package t08_thread_pool;

import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.ThreadPoolExecutor;

public class ExecutorsExample {

	public static void main(String[] args) {
		// 스레드 풀 기능을 정의 해논 인터페이스
		final ExecutorService exe;
		/*
		 	thread pool을 생성 하는 정적 메소드
		 	newCachedThreadPool	초기 스레드 수, 코어 스레드 수 0 ~ 최대 스레드 수 Integer.MAX_VALUE
		 	newfixedThreadPool(int value);
		 	초기 스레드 수 : 0 ~ 코어 스레드 수 ~ 최대 스레드 수 : value
		 	
		 	초기 스레드 수 : 스레드 풀이 생성 될 때 기본적으로 생성 되는 스레드 수
		 	코어 스레드 수 : 스레드가 증가 한 후 사용하지 않는 스레드를 제거하지 않고 최소한으로 유지할 개수
		 	최대 스레드 수 : 스레드 풀에서 생성 관리하는 최대 스레드 수
		 */
		
		// exe = Executors.newCachedThreadPool();
		exe = Executors.newFixedThreadPool(3);
		
		// 프로그램이 동작하고 있는 기기의 논리 프로세서 개수
		int coreCount = Runtime.getRuntime().availableProcessors();
		System.out.println(coreCount);
		
		for(int i = 0; i < 16; i++) {
			
			Runnable task = new Runnable() {
				
				@Override
				public void run() {
					// 스레드 풀의 상세 정보를 확인할 때 타입 변환 하여 사용
					ThreadPoolExecutor tpe = (ThreadPoolExecutor)exe;
				} 
			};
		}

	}

}
