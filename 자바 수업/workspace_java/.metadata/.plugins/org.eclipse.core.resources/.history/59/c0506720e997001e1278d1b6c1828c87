package n3_chat.server;

import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.Socket;

/**
 * Socket으로 연결된 client의 정보를 저장하고
 * 개별 송/수신을 담당할 class
 */
public class Client {
	
	/**
	 * 연결된 client socket 정보를 저장할 field
	 * OutputStream
	 * InputStream
	 */
	Socket socket;
	
	public Client(Socket socket) {
		this.socket = socket;
		receive(); // 수신 대기 및 처리
	}
	
	/**
	 * socket으로 연결된 client에게
	 * server에서 필요한 정보를 매개변수로 넘겨받아 출력
	 * @param message
	 */
	public void send(String message) {
		OutputStream os = null;
		byte[] bytes = message.getBytes();
		
		try {
			os = socket.getOutputStream();
			os.write(bytes);
			os.flush();
		} catch (IOException e) {
			System.out.println("Client 통신 안됨");
			
			try {
				if(os != null) os.close();
			} catch (IOException e1) {
				// TODO Auto-generated catch block
				e1.printStackTrace();
			} 
				
		}
	}
	
	/**
	 * client에서 출력된 데이터를 수신
	 * 연결된 모든 client에게 메세지 출력
	 */
	public void receive() {
		
		InputStream is = null;
		byte[] bytes = new byte[100];
		try {
			is = socket.getInputStream();
			int readCount = is.read(bytes);
			String message = new String(bytes,0,readCount);
			// 발신자 정보 ip:port
			String sender = socket.getInetAddress().getHostAddress()+":"+socket.getPort();
			message = sender +" : "+message;
			
			// server에 연결된 모든 client에 메세지 출력
			for(Client c : ServerExample.clients) {
				c.send(message);
			}
			
		} catch (IOException e) {
			e.printStackTrace();
		}
		
		
	}
	
}












